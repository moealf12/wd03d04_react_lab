{"ast":null,"code":"var _jsxFileName = \"/Users/mohammedalfisal/Desktop/react_film 4/src/component/FilmListing.js\";\nimport React, { Component } from 'react';\nimport FilmRow from './FilmRow';\n\nclass FilmListing extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filters: \"all\"\n    };\n  }\n\n  handleFilterClick(filter) {\n    this.setState({\n      filters: filter\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          films = _this$props.films,\n          faves = _this$props.faves;\n    let showFilms = [];\n    const allFilms = films.map(film => React.createElement(FilmRow, {\n      key: film.id,\n      film: film,\n      isFave: faves.includes(film),\n      onFaveToggle: () => this.props.onFaveToggle(film),\n      handleDetailsClick: this.props.handleDetailsClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }));\n    const favesFilms = faves.map(film => React.createElement(FilmRow, {\n      key: film.id,\n      film: film,\n      isFave: faves.includes(film),\n      onFaveToggle: () => this.props.onFaveToggle(film),\n      handleDetailsClick: this.props.handleDetailsClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }));\n    this.state.filters === \"all\" ? showFilms = allFilms : showFilms = favesFilms;\n    return React.createElement(\"div\", {\n      className: \"film-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"section-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"FILMS\"), React.createElement(\"div\", {\n      className: \"film-list-filters\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onClick: () => this.handleFilterClick('all'),\n      className: \"film-list-filter \".concat(this.state.filters === 'all' ? 'is-active' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"ALL\", React.createElement(\"span\", {\n      className: \"section-count\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, films.length)), React.createElement(\"div\", {\n      onClick: () => this.handleFilterClick('faves'),\n      className: \"film-list-filter \".concat(this.state.filters === 'faves' ? 'is-active' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"FAVES\", React.createElement(\"span\", {\n      className: \"section-count\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, faves.length))), showFilms);\n  }\n\n}\n\nexport default FilmListing;","map":{"version":3,"sources":["/Users/mohammedalfisal/Desktop/react_film 4/src/component/FilmListing.js"],"names":["React","Component","FilmRow","FilmListing","constructor","props","state","filters","handleFilterClick","filter","setState","render","films","faves","showFilms","allFilms","map","film","id","includes","onFaveToggle","handleDetailsClick","favesFilms","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport FilmRow from './FilmRow';\n\n\nclass FilmListing extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            filters: \"all\"\n        }   \n    }\n\n    handleFilterClick(filter){\n        this.setState({\n            filters: filter\n        });\n    }\n\n    render(){\n        \n        const { films, faves} = this.props;\n        let showFilms = [];\n        const allFilms = films.map((film) => <FilmRow key={film.id} film={film} isFave={faves.includes(film)} onFaveToggle={() => this.props.onFaveToggle(film)}  handleDetailsClick ={this.props.handleDetailsClick}/>)\n        const favesFilms = faves.map((film) => <FilmRow key={film.id} film={film} isFave={faves.includes(film)} onFaveToggle={() => this.props.onFaveToggle(film)} handleDetailsClick ={this.props.handleDetailsClick}/>)\n        this.state.filters === \"all\" ? showFilms = allFilms : showFilms = favesFilms\n       \n        return(\n            <div className=\"film-list\" >\n                <h1 className=\"section-title\">FILMS</h1>\n                    <div className=\"film-list-filters\">\n                        <div onClick={() => this.handleFilterClick('all')} className={`film-list-filter ${this.state.filters === 'all' ? 'is-active' : ''}`}>\n                            ALL\n                            <span className=\"section-count\">{films.length}</span>\n                        </div>\n                        <div onClick={() => this.handleFilterClick('faves')} className={`film-list-filter ${this.state.filters === 'faves' ? 'is-active' : ''}`}>\n                            FAVES\n                            <span className=\"section-count\">{faves.length}</span>\n                        </div>\n                     </div>\n                        {showFilms}       \n            </div>\n        );\n    }\n}\n\n\nexport default FilmListing;\n\n\n\n"]},"metadata":{},"sourceType":"module"}